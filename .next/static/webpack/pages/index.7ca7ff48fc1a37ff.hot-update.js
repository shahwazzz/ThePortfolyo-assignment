"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utilits.js":
/*!************************!*\
  !*** ./src/utilits.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"aTagClick\": function() { return /* binding */ aTagClick; },\n/* harmony export */   \"activeSection\": function() { return /* binding */ activeSection; },\n/* harmony export */   \"activeSkillProgress\": function() { return /* binding */ activeSkillProgress; },\n/* harmony export */   \"customCursor\": function() { return /* binding */ customCursor; },\n/* harmony export */   \"dataImage\": function() { return /* binding */ dataImage; },\n/* harmony export */   \"devman_tm_moving_animation\": function() { return /* binding */ devman_tm_moving_animation; },\n/* harmony export */   \"formatData\": function() { return /* binding */ formatData; },\n/* harmony export */   \"imgToSVG\": function() { return /* binding */ imgToSVG; },\n/* harmony export */   \"lineBreak\": function() { return /* binding */ lineBreak; },\n/* harmony export */   \"preloader\": function() { return /* binding */ preloader; },\n/* harmony export */   \"scrollSection\": function() { return /* binding */ scrollSection; },\n/* harmony export */   \"scrollTop\": function() { return /* binding */ scrollTop; },\n/* harmony export */   \"stickyNav\": function() { return /* binding */ stickyNav; },\n/* harmony export */   \"wowJsAnimation\": function() { return /* binding */ wowJsAnimation; }\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n\nvar preloader_ = function() {\n    var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ? true : false;\n    var preloader = document.getElementById(\"preloader\");\n    if (preloader) {\n        if (!isMobile) {\n            setTimeout(function() {\n                preloader.classList.add(\"preloaded\");\n            }, 800);\n            setTimeout(function() {\n                preloader.remove();\n            }, 2000);\n        } else {\n            preloader.remove();\n        }\n    }\n};\nvar customCursor = function() {\n    var mouseEvent = function mouseEvent(element) {\n        react_dom__WEBPACK_IMPORTED_MODULE_0___default().findDOMNode(element).addEventListener(\"mouseenter\", function() {\n            e.classList.add(\"cursor-hover\"), t.classList.add(\"cursor-hover\");\n        });\n        react_dom__WEBPACK_IMPORTED_MODULE_0___default().findDOMNode(element).addEventListener(\"mouseleave\", function() {\n            e.classList.remove(\"cursor-hover\"), t.classList.remove(\"cursor-hover\");\n        });\n    };\n    var myCursor = document.querySelectorAll(\".mouse-cursor\"), hamburger = document.querySelector(\".hamburger\"), kura_tm_topbar = document.querySelector(\".kura_tm_topbar \"), pointer = document.querySelector(\".cursor-pointer\"), e = document.querySelector(\".cursor-inner\"), t = document.querySelector(\".cursor-outer\");\n    if (myCursor.length) {\n        if (document.body) {\n            var n, i = 0, o = !1;\n            window.onmousemove = function customCursor(s) {\n                o || (t.style.transform = \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\"), e.style.transform = \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\", n = s.clientY, i = s.clientX;\n            }, document.body.addEventListener(\"mouseenter\", // \"a,.kura_tm_topbar .trigger, .cursor-pointer\",\n            function() {\n                var a = document.querySelectorAll(\"a\");\n                e.classList.add(\"cursor-inner\"), t.classList.add(\"cursor-outer\");\n                for(var i = 0; i < a.length; i++){\n                    var element = a[i];\n                    mouseEvent(element);\n                }\n                hamburger && mouseEvent(hamburger);\n                kura_tm_topbar && mouseEvent(kura_tm_topbar);\n                pointer && mouseEvent(pointer);\n            }), e.style.visibility = \"visible\", t.style.visibility = \"visible\";\n        }\n    }\n};\nvar preloader = function() {\n    preloader_();\n    setTimeout(function() {\n        document.querySelector(\"body\").classList.add(\"opened\");\n    }, 3000);\n};\nvar aTagClick = function() {\n    var aTag = document.querySelectorAll(\"[href='#']\");\n    for(var i = 0; i < aTag.length; i++){\n        var a = aTag[i];\n        react_dom__WEBPACK_IMPORTED_MODULE_0___default().findDOMNode(a).addEventListener(\"click\", function(e) {\n            e.preventDefault();\n        });\n    }\n};\n// Data image\nvar dataImage = function() {\n    var d = document.querySelectorAll(\"[data-img-url\");\n    for(var i = 0; i < d.length; i++){\n        var element = d[i];\n        element.style.backgroundImage = \"url(\".concat(element.getAttribute(\"data-img-url\"), \")\");\n    }\n};\nvar imgToSVG = function() {\n    document.querySelectorAll(\"img.svg\").forEach(function(el) {\n        var imgID = el.getAttribute(\"id\");\n        var imgClass = el.getAttribute(\"class\");\n        var imgURL = el.getAttribute(\"src\");\n        fetch(imgURL).then(function(response) {\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch image\");\n            }\n            return response.text();\n        }).then(function(data) {\n            var parser = new DOMParser();\n            var xmlDoc = parser.parseFromString(data, \"text/html\");\n            var svg = xmlDoc.querySelector(\"svg\");\n            if (typeof imgID !== \"undefined\") {\n                svg.setAttribute(\"id\", imgID);\n            }\n            if (typeof imgClass !== \"undefined\") {\n                svg.setAttribute(\"class\", imgClass + \" replaced-svg\");\n            }\n            svg.removeAttribute(\"xmlns:a\");\n            if (el.parentNode) {\n                el.parentNode.replaceChild(svg, el);\n            }\n        }).catch(function(error) {\n            console.error(\"Error fetching image:\", error);\n        });\n    });\n};\nvar activeSection = function(value) {\n    var sections = document.querySelectorAll(\".edrea_tm_section\");\n    sections.forEach(function(section) {\n        var id = section.getAttribute(\"id\");\n        if (id == value) {\n            section.className = \"edrea_tm_section active wow animated fadeInUp\";\n        } else {\n            section.className = \"edrea_tm_section hidden animated\";\n        }\n    });\n};\nvar activeSkillProgress = function() {\n    var progress_inner = document.querySelectorAll(\".skillsInner___\"), triggerBottom = window.innerHeight / 5 * 5;\n    progress_inner.forEach(function(box) {\n        var boxTop = box.getBoundingClientRect().top, boxElement = box.getElementsByClassName(\"bar\"), label = box.getElementsByClassName(\"label\"), number = box.getElementsByClassName(\"number\"), boxItem = boxElement[0], pWidth = box.getAttribute(\"data-value\"), pColor = box.getAttribute(\"data-color\");\n        if (boxTop < triggerBottom) {\n            boxItem.classList.add(\"open\");\n            label[0].classList.add(\"opened\");\n            number[0].style.right = \"\".concat(100 - pWidth, \"%\");\n            boxItem.getElementsByClassName(\"bar_in\")[0].style.width = \"\".concat(pWidth, \"%\");\n            boxItem.getElementsByClassName(\"bar_in\")[0].style.backgroundColor = pColor;\n        } else {\n            boxItem.classList.remove(\"open\");\n            label[0].classList.remove(\"opened\");\n            number[0].style.right = \"\".concat(120, \"%\");\n        }\n    });\n};\nvar scrollSection = function() {\n    var sections = document.querySelectorAll(\".devman_tm_section\");\n    var navLi = document.querySelectorAll(\".anchor_nav li\");\n    var current = \"\";\n    sections.forEach(function(section) {\n        var sectionTop = section.offsetTop;\n        var sectionHeight = section.clientHeight;\n        if (pageYOffset >= sectionTop - sectionHeight / 3) {\n            current = section.getAttribute(\"id\");\n        }\n    });\n    navLi.forEach(function(li) {\n        if (current !== null) {\n            li.classList.remove(\"current\");\n        }\n        if (li.getElementsByTagName(\"a\")[0].getAttribute(\"href\") == \"#\".concat(current)) {\n            li.classList.add(\"current\");\n        }\n    });\n};\nvar stickyNav = function() {\n    var offset = window.scrollY;\n    var stickys = document.querySelectorAll(\".devman_tm_header\");\n    stickys.forEach(function(sticky) {\n        if (sticky) {\n            if (offset > 100) {\n                sticky.classList.add(\"animate\");\n            } else {\n                sticky.classList.remove(\"animate\");\n            }\n        }\n    });\n};\nvar scrollTop = function() {\n    var bar = document.querySelector(\".progressbar\");\n    var line = document.querySelector(\".progressbar .line\");\n    var documentHeight = document.documentElement.scrollHeight;\n    var windowHeight = window.innerHeight;\n    var winScroll = window.scrollY;\n    var value = winScroll / (documentHeight - windowHeight) * 100;\n    var position = value;\n    if (winScroll > 100) {\n        bar.classList.add(\"animate\");\n        line.style.height = position + \"%\";\n    } else {\n        bar.classList.remove(\"animate\");\n    }\n};\nvar wowJsAnimation = function() {\n    if (true) {\n        window.WOW = __webpack_require__(/*! wowjs */ \"./node_modules/wowjs/dist/wow.js\");\n    }\n    new WOW.WOW().init();\n};\n// Moveing effect\nvar devman_tm_moving_animation = function() {\n    var detail = document.querySelectorAll(\".moving_effect\");\n    var offset = 0;\n    detail.forEach(function(element) {\n        var direction = element.getAttribute(\"data-direction\");\n        window.addEventListener(\"scroll\", function() {\n            offset = window.scrollY;\n            var h = window.innerHeight;\n            var i = element.getBoundingClientRect().top + window.scrollY - offset - h;\n            if (element.getAttribute(\"data-reverse\") == \"yes\") {\n                i *= -1;\n            }\n            var x = direction === \"x\" ? i * 70 / h : 0;\n            var y = direction === \"x\" ? 0 : i * 70 / h;\n            if (element.getAttribute(\"data-reverse\") == \"yes\") {\n                i *= -1;\n            }\n            if (i * -1 < h + 300 && i < 300) {\n                element.style.transform = \"translate3d(\".concat(x, \"px,\").concat(y, \"px, 0px)\");\n            }\n        });\n    });\n};\n// linebrack\nvar lineBreak = function(value) {\n    return {\n        __html: value.replace(/\\n/g, \"<br />\")\n    };\n};\n//format date\nvar formatData = function(date) {};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utilits.js\n"));

/***/ })

});